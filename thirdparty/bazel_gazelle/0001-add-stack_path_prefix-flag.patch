From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: "Artem V. Navrotskiy" <bozaro@yandex.ru>
Date: Fri, 23 Sep 2022 19:58:19 +0300
Subject: [PATCH] Add -stack_path_prefix flag

---
 internal/go_repository.bzl | 7 +++++++
 language/go/config.go      | 7 +++++++
 language/go/generate.go    | 4 ++++
 3 files changed, 18 insertions(+)

diff --git a/internal/go_repository.bzl b/internal/go_repository.bzl
index 26b83e4..b863935 100644
--- a/internal/go_repository.bzl
+++ b/internal/go_repository.bzl
@@ -265,6 +265,8 @@ def _go_repository_impl(ctx):
             "-repo_config",
             ctx.path(ctx.attr.build_config),
         ]
+        if ctx.attr.stackpath:
+            cmd.extend(["-stack_path_prefix", ctx.attr.stackpath])
         if ctx.attr.version:
             cmd.append("-go_repository_module_mode")
         if ctx.attr.build_file_name:
@@ -309,6 +311,11 @@ go_repository = repository_rule(
             `importpath` attributes prefixed with this `importpath` string.  """,
             mandatory = True,
         ),
+        "stackpath": attr.string(
+            doc = """
+            Base stacktrace path for this packages. By default, this is path relative to `bazel-out` directory.
+            """,
+        ),
 
         # Attributes for a repository that should be checked out from VCS
         "commit": attr.string(
diff --git a/language/go/config.go b/language/go/config.go
index f46a60f..7515d4c 100644
--- a/language/go/config.go
+++ b/language/go/config.go
@@ -62,6 +62,9 @@ type goConfig struct {
 	// to infer an importpath for a rule without setting the prefix.
 	prefixSet bool
 
+	// stackPathPrefix
+	stackPathPrefix string
+
 	// importMapPrefix is a prefix of a package path, used to generate importmap
 	// attributes. Set with # gazelle:importmap_prefix.
 	importMapPrefix string
@@ -393,6 +396,10 @@ func (*goLang) RegisterFlags(fs *flag.FlagSet, cmd string, c *config.Config) {
 			&namingConventionFlag{&gc.goNamingConventionExternal},
 			"go_naming_convention_external",
 			"controls naming convention used when resolving libraries in external repositories with unknown conventions")
+		fs.StringVar(&gc.stackPathPrefix,
+			"stack_path_prefix",
+			"",
+			"Stacktrace path prefix")
 
 	case "update-repos":
 		fs.StringVar(&gc.buildDirectivesAttr,
diff --git a/language/go/generate.go b/language/go/generate.go
index d1789cf..18495bf 100644
--- a/language/go/generate.go
+++ b/language/go/generate.go
@@ -657,6 +657,10 @@ func (g *generator) setImportAttrs(r *rule.Rule, importPath string) {
 			r.SetAttr("importmap", importMap)
 		}
 	}
+
+	if gc.stackPathPrefix != "" {
+		r.SetAttr("stackpath", path.Join(gc.stackPathPrefix, g.rel))
+	}
 }
 
 func (g *generator) commonVisibility(importPath string) []string {
